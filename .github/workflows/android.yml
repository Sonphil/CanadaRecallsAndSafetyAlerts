name: Android CI

on:
  push:
    branches:
      - '*'

jobs:
  debug_apk:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Lint Check
      run: bash ./gradlew ktlintCheck

    - name: Run unit tests
      run: bash ./gradlew test

    - name: Build debug APK
      run: bash ./gradlew assembleDebug --stacktrace

    - name: Copy test results
      run: |
        mkdir -p junit-results
        find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit-results/ \;

    - name: Upload test results to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: junit-results
        path: junit-results

    - name: Copy build reports
      id: copy-build-reports
      run: chmod u+r+x scripts/copy-build-results.sh; scripts/copy-build-results.sh

    - name: Upload build reports to GitHub
      uses: actions/upload-artifact@v1
      with:
        name: build-reports
        path: ${{ steps.copy-build-reports.outputs.path }}

    - name: Upload debug APK to GitHub
      uses: actions/upload-artifact@v1
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk

  release_aab:
    if: github.ref == 'refs/heads/master'
    needs: debug_apk
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Decrypt secret files
      shell: bash
      run: chmod u+r+x scripts/decrypt_secrets.sh; scripts/decrypt_secrets.sh
      env:
        GOOGLE_PLAY_SERVICE_ACCOUNT_ENC_PW: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_ENC_PW }}
        GOOGLE_SERVICES_ENC_PW: ${{ secrets.GOOGLE_SERVICES_ENC_PW }}
        KEYSTORE_ENC_PW: ${{ secrets.KEYSTORE_ENC_PW }}

    - name: Build release AAB
      id: create-aab
      run: chmod +x ./gradlew; chmod u+r+x scripts/create-aab.sh; scripts/create-aab.sh

    - name: Upload release AAB and mapping file to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: app-release
        retention-days: 2
        path: |
          ${{ steps.create-aab.outputs.aab_path }}
          ${{ steps.create-aab.outputs.mapping_file_path }}

    - name: Publish to Play Store
      if: github.ref == 'refs/heads/master'
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJson: ./google-play-service-account.json
        packageName: com.sonphil.canadarecallsandsafetyalerts
        track: beta
        releaseFiles: ${{ steps.create-aab.outputs.aab_path }}
        mappingFile: ${{ steps.create-aab.outputs.mapping_file_path }}
        whatsNewDirectory: ./whatsnew